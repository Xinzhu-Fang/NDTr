sample.interval=20000
"identical" "hook" "Rprof" 
"lapply" "summaryRprof" "print" 
"print.default" "print" "print.data.frame" "print" "print.default" "print" 
"print.default" "print" "print.data.frame" "print" "print.default" "print" 
"tryCatch" "base::try" "print.default" "print" "print.data.frame" "print" "print.default" "print" 
"print.default" "print" "print.data.frame" "print" "print.default" "print" 
"print.default" "print" "print.data.frame" "print" "print.default" "print" 
"print.default" "print" "print.data.frame" "print" "print.default" "print" 
"print.default" "print" "print.data.frame" "print" "print.default" "print" 
"print.default" "print" "print.data.frame" "print" "print.default" "print" 
"print.default" "print" "print.data.frame" "print" "print.default" "print" 
"gzfile" "readRDS" "is.numeric_version" "as.numeric_version" ".findVersion" ".getRequiredPackages2" "library" ".getRequiredPackages2" "library" 
"readRDS" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" ".getRequiredPackages2" "library" 
"names" "checkConflicts" "library" ".getRequiredPackages2" "library" ".getRequiredPackages2" "library" 
"tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"is" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"vapply" "remove" ".resetInheritedMethods" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
".cacheGenericTable" ".cacheGeneric" "getGeneric" ".recMembers" "Recall" ".recMembers" "getGroupMembers" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"length" "initialize" "initialize" "new" ".derivedDefaultMethod" "implicitGeneric" ".genericOrImplicit" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"is" ".recMembers" "getGroupMembers" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"is.list" ".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "getGeneric" "FUN" "lapply" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"exists" ".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "getGeneric" "FUN" "lapply" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"get" ".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "getGeneric" "FUN" "lapply" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"get" ".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "getGeneric" "FUN" "lapply" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"get" ".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "getGeneric" "FUN" "lapply" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"get" ".getGenericFromCacheTable" ".getGenericFromCache" ".getGeneric" "getGeneric" "FUN" "lapply" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"lapply" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"is.factor" "unique.default" "unique" "setdiff" "remove" ".resetInheritedMethods" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
".getGeneric" "getGeneric" "FUN" "lapply" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
".getClassesFromCache" "getClassDef" "is" ".checkGroupSigLength" "Recall" ".checkGroupSigLength" ".updateMethodsInTable" ".updateMethodsInTable" ".updateMethodsInTable" "methods::cacheMetaData" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"names" "checkConflicts" "library" ".getRequiredPackages2" "library" 
"getDLLRegisteredRoutines.DLLInfo" "assignNativeRoutines" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" ".getRequiredPackages2" "library" 
"namespaceImportFrom" "namespaceImport" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"namespaceImportFrom" "namespaceImport" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"namespaceImportFrom" "namespaceImport" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"namespaceImportFrom" "namespaceImport" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"namespaceImportFrom" "namespaceImport" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"namespaceImportFrom" "namespaceImport" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.makeCompletions" ".rs.getCompletionsNAMESPACE" "Reduce" "<Anonymous>" 
"as.list" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "f" "Reduce" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBaseNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBaseNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBaseNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBaseNamespace" "getExportedValue" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"close.connection" "close" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"match.fun" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"putconst" "cb$putcode" "cmpConstArg" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"constantFold" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"cb$putconst" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"cb$putlabel" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"packFrameName" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"packFrameName" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"packFrameName" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"findCenvVar" "getInlineInfo" "isBaseVar" "FUN" "lapply" "unlist" "Filter" "findLocalsList" "funEnv" "make.functionContext" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsNAMESPACE" "Reduce" "<Anonymous>" 
"findCenvVar" "findFunDef" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpWhileBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" 
"checkCall" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsLibraryContext" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"match.arg" "order" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"order" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"order" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"order" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"order" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lazyLoadDBfetch" "get" "inherits" ".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lazyLoadDBfetch" "get" "inherits" ".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"%in%" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"findCenvVar" "findFunDef" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelpFunction" "<Anonymous>" 
"cb$savecurloc" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"normalizePath" "unique" "data" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"$<-" "make.promiseContext" "cmpCallArgs" "cmpCallExprFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grep" "isBlankRd" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grepl" "ifelse" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"gzfile" "readRDS" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grep" "flushBuffer" "blankLine" "Rd2txt" "tryCatchList" "tryCatch" ".Rd_get_text" ".Rd_get_title" "gsub" ".Rd_format_title" "strwrap" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grep" "isBlankRd" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"options" "%in%" "getOption" "file" "readLines" "paste" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"c" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"attr" "FUN" "lapply" "sapply" "apply" "setDynamicFlags" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"paste" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"options" "%in%" "getOption" "file" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"options" "%in%" "getOption" "file" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"options" "%in%" "getOption" "file" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"gzfile" "readRDS" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"order" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"order" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"order" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"order" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lazyLoadDBfetch" "get" "inherits" ".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsNAMESPACE" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lapply" "unlist" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lapply" "unlist" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lapply" "unlist" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"lapply" "unlist" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gzfile" "readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grep" "isBlankRd" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"unlink" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"getAssignedVar" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"cmpBuiltinArgs" "cmpBuiltin" "cmpDotInternalCall" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" 
"findLocVar" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.doStripSurrounding" ".rs.stripSurrounding" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"fsub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"FUN" "lapply" "sapply" "RdTags" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.list" "checkSkipLoopCntxtList" "checkSkipLoopCntxt" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "create_binned_data" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "getAnywhere" 
"ls" "%in%" "find" "getAnywhere" 
"cat" "print.getAnywhere" "<Anonymous>" 
"ls" "%in%" "find" "getAnywhere" 
"unique" ".make_numeric_version" "R_system_version" "package_version" "getRversion" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" 
"lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "unique" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"cb$putcode" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"save" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
"ls" "lapply" "<Anonymous>" 
"ls" "lapply" "<Anonymous>" 
"ls" "lapply" "<Anonymous>" 
"ls" "lapply" "<Anonymous>" 
"as.list.default" "as.list" "vapply" "rm" "withCallingHandlers" "suppressWarnings" "<Anonymous>" 
